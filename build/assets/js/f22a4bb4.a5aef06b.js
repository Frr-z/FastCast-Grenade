"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[972],{84160:e=>{e.exports=JSON.parse('{"functions":[{"name":"_start","desc":"Starts the internal processes for ClientBridge.","params":[],"returns":[],"function_type":"static","ignore":true,"source":{"line":34,"path":"src/ReplicatedStorage/BridgeNet/ClientBridge.lua"}},{"name":"Fire","desc":"The equivalent of :FireServer().\\n\\n```lua\\nlocal Bridge = BridgeNet.CreateBridge(\\"Remote\\")\\n\\nBridge:Fire(\\"Hello\\", \\"world!\\")\\n```","params":[{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":281,"path":"src/ReplicatedStorage/BridgeNet/ClientBridge.lua"}},{"name":"InvokeServerAsync","desc":"Invokes the server for a response. Promise wrapper over :InvokeServerAsync()\\n\\n```lua\\nlocal Bridge = BridgeNet.CreateBridge(\\"Remote\\")\\n\\nlocal data = Bridge:InvokeServerAsync(\\"whats 2+2?\\")\\nprint(data) -- prints \\"4\\"\\n```","params":[{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"...any"}],"function_type":"method","source":{"line":306,"path":"src/ReplicatedStorage/BridgeNet/ClientBridge.lua"}},{"name":"Connect","desc":"Creates a connection. Can be disconnected using :Disconnect().\\n\\n```lua\\nlocal Bridge = BridgeNet.CreateBridge(\\"Remote\\")\\n\\nBridge:Connect(function(text)\\n\\tprint(text)\\nend)\\n```","params":[{"name":"func","desc":"","lua_type":"function"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":346,"path":"src/ReplicatedStorage/BridgeNet/ClientBridge.lua"}},{"name":"Once","desc":"Creates a connection, when fired it will disconnect.\\n\\n```lua\\nlocal Bridge = BridgeNet.CreateBridge(\\"ConstantlyFiringText\\")\\n\\nBridge:Connect(function(text)\\n\\tprint(text) -- Fires multiple times\\nend)\\n\\nBridge:Once(function(text)\\n\\tprint(text) -- Fires once\\nend)\\n```","params":[{"name":"func","desc":"","lua_type":"function"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":394,"path":"src/ReplicatedStorage/BridgeNet/ClientBridge.lua"}},{"name":"SetReplicationRate","desc":"Sets the rate of which the Bridge sends and receives data.","params":[{"name":"replRate","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":408,"path":"src/ReplicatedStorage/BridgeNet/ClientBridge.lua"}},{"name":"Destroy","desc":"Destroys the ClientBridge object. Doesn\'t destroy the RemoteEvent, or destroy the identifier. It doesn\'t send anything to the server. Just destroys the client sided object.\\n\\n```lua\\nlocal Bridge = ClientBridge.new(\\"Remote\\")\\n\\nClientBridge:Destroy()\\n\\nClientBridge:Fire() -- Errors\\n```","params":[],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":436,"path":"src/ReplicatedStorage/BridgeNet/ClientBridge.lua"}}],"properties":[],"types":[],"name":"ClientBridge","desc":"Client-sided object for handling networking.","source":{"line":26,"path":"src/ReplicatedStorage/BridgeNet/ClientBridge.lua"}}')}}]);